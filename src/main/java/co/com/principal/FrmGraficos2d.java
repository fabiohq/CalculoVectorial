/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.principal;
import co.com.utilidades.ConexionArduinoJava;
import co.com.utilidades.Util;
import java.awt.Color;
import java.awt.image.BufferedImage;
import com.panamahitek.ArduinoException;
import com.panamahitek.PanamaHitek_Arduino;
import java.util.logging.Level;
import java.util.logging.Logger;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;

/**
 *
 * @author FABIO
 */
public class FrmGraficos2d extends javax.swing.JDialog {

    /**
     * Creates new form FrmGraficos2d
     */
    static double temperatura;
    static PanamaHitek_Arduino pa = new PanamaHitek_Arduino();
    static SerialPortEventListener listener = new SerialPortEventListener() {
        @Override
        public void serialEvent(SerialPortEvent spe) {
            try {
                if (pa.isMessageAvailable()) {
                    try {
                        try {
                            temperatura = new Double(pa.printMessage());
                        } catch (Exception e) {
                            e.printStackTrace();
                        }

                        System.out.println("=========> " + temperatura);

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }

            } catch (ArduinoException ex) {
                ex.printStackTrace();
                Logger.getLogger(FrmGraficos2d.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SerialPortException ex) {
                ex.printStackTrace();
                Logger.getLogger(FrmGraficos2d.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    };
    double t = 0;

    public FrmGraficos2d(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        areaDibujo = new AreaDibujo();
        canvas = areaDibujo.getCanvas();
        initComponents();
        jPanelAreaDibujo.add(areaDibujo);
        conect = new ConexionArduinoJava();
        //conect.init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelAreaDibujo = new javax.swing.JPanel();
        buttonInterpolar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Termograf√≠a");

        jPanelAreaDibujo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelAreaDibujo.setPreferredSize(new java.awt.Dimension(100, 100));

        buttonInterpolar.setText("Interpolar");
        buttonInterpolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInterpolarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelAreaDibujo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonInterpolar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelAreaDibujo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonInterpolar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonInterpolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInterpolarActionPerformed
        int rojo = 0;//Color rojo c1
        int verde = 0;//Color Verde c2
        int azul = 0;//Color Azul c3
        interpolar(rojo, verde, azul);

    }//GEN-LAST:event_buttonInterpolarActionPerformed

    private static int redondeo(int obj) {
        if (obj < 0) {
            obj = 0;
        } else if (obj > 255) {
            obj = 255;
        }
        return obj;
    }
    static BufferedImage canvas;
    static AreaDibujo areaDibujo;
    static ConexionArduinoJava conect;

    public void interpolar(int rojo, int verde, int azul) {

        try {
            pa.arduinoRX("COM8", 9600, listener);
        } catch (ArduinoException ex) {

            ex.printStackTrace();
        } catch (SerialPortException ex) {
            Logger.getLogger(FrmGraficos2d.class.getName()).log(Level.SEVERE, null, ex);
        }
        double x = 0;
        while (true) {
            //red = 255;
            
            if (x >= 5) {
                x = 0;
                rojo = 0;//c1;
                verde = 0;//c2;
                azul = 0;//c3;
            }
            for (int i = 0; i < 100; i++) {//Se recorre el ancho del panel
                for (int j = 0; j < 100; j++) {//Se recorre la altura del panel
                    System.out.println("===>Temperatura Actual " + temperatura+" C");
                        if(temperatura <=10){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0,000.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 001.0,100.0,050.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0,255.0);//Azul c3                            
                        }else if (temperatura > 10 && temperatura <=12.5){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 051.0,100.0, 100.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Azul c3
                        }else if (temperatura > 12.5 && temperatura <=15){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 101.0,100.0, 150.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Azul c3
                        }else if (temperatura > 15 && temperatura <=17.5){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 151.0,100.0, 200.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Azul c3
                        }else if (temperatura > 17.5 && temperatura <=20){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 201.0,100.0, 250.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Azul c3              
                        }else if (temperatura > 20 && temperatura <=22.5){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 251.0,100.0, 255.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Azul c3
                        }else if (temperatura > 22.5 && temperatura <=25){//Azul
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 205.0);//Azul c3
                        }else if (temperatura > 25 && temperatura <=27.5){//Amarillo
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 216.0,100.0, 220.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Verde c2
                          //azul  = (int) Util.interpolarDosPuntos(j, 0, 204.0,100.0, 153.0);//Azul c3              
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Azul c3              
                        }else if (temperatura > 27.5 && temperatura <=30){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 221.0,100.0, 240.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Azul c3              
                        }else if (temperatura > 30 && temperatura <=32){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 241.0,100.0, 255.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Azul c3              
                        }else if (temperatura > 32 && temperatura <=34){//Rojo
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 230.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Azul c3              
                        }else if (temperatura > 34 && temperatura <=36){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 229.0,100.0, 200.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Azul c3              
                        }else if (temperatura > 36 && temperatura <=38){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 199.0,100.0, 170.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Azul c3              
                        }else if (temperatura > 38 /*&& temperatura <=40*/){
                            rojo  = (int) Util.interpolarDosPuntos(j, 0, 255.0,100.0, 255.0);//Color rojo c1
                            verde = (int) Util.interpolarDosPuntos(j, 0, 169.0,100.0, 100.0);//Verde c2
                            azul  = (int) Util.interpolarDosPuntos(j, 0, 000.0,100.0, 000.0);//Azul c3              
                        }                 
                        rojo = redondeo(rojo);
                        verde = redondeo(verde);
                        azul = redondeo(azul);
                    Color c = new Color(rojo, verde, azul);
                    areaDibujo.pintarPixelCanvas(i, j, c, canvas);
                    areaDibujo.pintar(canvas);
                    
                }
            }
        }
    }

    public double validarCodColor(double color) {
        if(color >= 0 && color <=224){
            
        }
        return 0.0;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonInterpolar;
    private javax.swing.JPanel jPanelAreaDibujo;
    // End of variables declaration//GEN-END:variables
}
